name: 'Draft Release Milestone'
description: 'Updates a Github Repo when a milestone is closed'
inputs:
  release_notes_summary_path:
    description: 'Path used to save the release notes summary markdown file'
    required: false
    default: 'docs/release_notes/summary.md'
  release_notes_folder_path:
    description: 'path to the folder where the release note files are saved'
    required: false
    default: 'docs/'
  base_env_prefix:  # id of input
    description: 'The prefix of the base Conda environment'
    required: false
    default: '/usr/share/miniconda'
outputs:
  version:
    description: "The project's semantic version"
    value: ${{ steps.build-package.outputs.PACKAGE_PATH }}
  release-notes-version:
    description: "The text of this version's release notes "
    value: ${{ steps.build-package.outputs.PACKAGE_PATH }}
  release-notes-summary:
    description: "The file path of the generated package"
    value: ${{ steps.build-package.outputs.PACKAGE_PATH }}
runs:
  using: "composite"
  steps:
    - name: Check release name
      run: |
        pip install semver
        SPLICED_TITLE=`echo "${{ github.event.milestone.title }}" | cut -d'v' -f 2`
        pysemver check ${SPLICED_TITLE}
      shell: bash -l {0}
    - name: Update version
      run: |
        if [ -f version ]; then
          echo ${{ github.event.milestone.title }} > version
        else
          echo "Unable to find version file in current directory. Creating version file with current milestone title."
        fi
      shell: bash -l {0}
    - name: Remove existing file
      run: |
        if [ -f "${{ github.workspace }}/temp_${{ github.event.milestone.title }}/${{ github.event.milestone.title }}.md" ]; then
          rm -f ${{ github.workspace }}/temp_${{ github.event.milestone.title }}/${{ github.event.milestone.title }}.md
        fi
      shell: bash -l {0}
    - name: Create Release Notes
      uses: docker://decathlon/release-notes-generator-action:2.0.1
      env:
        GITHUB_TOKEN: ${{ github.token }}
        OUTPUT_FOLDER: ${{ github.workspace }}/release_notes
        USE_MILESTONE_TITLE: "true"

    - name: combine outputs
      run: |
        git pull
        ls -al 
        echo "------"
        pwd
        python release-milestone-action/combine_release_notes.py
      shell: bash -l {0}
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ github.event.milestone.title }}
        path: ${{ github.workspace }}/release_notes/${{ github.event.milestone.title }}
    - uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref }}
        release_name: Release Changelog ${{ github.event.milestone.title }}
        body_path: ${{ github.workspace }}/Release_Note_Log.md
        draft: true

branding:
  icon: 'package'
  color: 'green'
